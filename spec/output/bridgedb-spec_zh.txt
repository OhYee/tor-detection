

                          BridgeDB规范

                             卡斯滕卫矛
                              尼克·马修森

0. 预赛

   本文档指定了BridgeDB如何处理桥接描述符文件以了解新的桥接，如何维护对分发器的持久桥接分配，以及如何决定在用户请求时发送哪些桥接。

   这里的一些决定可能不是最优的:本文档旨在指定截至2013年8月的当前行为，而不是指定理想行为。

1. 导入网桥网络状态和网桥描述符

   BridgeDB通过解析桥的网络状态、桥描述符和Tor的目录协议中指定的额外信息文档来了解桥。BridgeDB首先解析一个网桥网络状态文件，然后至少解析一个网桥描述符文件，可能还会解析一个额外的信息文件。

   BridgeDB在sighup上扫描文件。

   BridgeDB不验证描述符或networkstatus文件上的签名:操作符需要确保这些文档来自为我们进行验证的Tor实例。

1.1。解析网桥状态

   网桥网络状态文档包含网桥权限已知的网桥以及网桥权限分配给它们的标志的信息。
   我们期望每个网桥的网桥状态至少包含以下两行(格式在Tor的目录协议中完全指定):
 “r”，外号，身份，摘要，出版物，IP，文件
          一个“SP地址”:“port NL(不超过8个实例)”"s" SP Flags NL

   BridgeDB从“r”行解析标识和发布时间戳，从“a”行解析OR地址和ORPort，从“s”行解析分配的标志，专门检查“运行”和“稳定”标志的分配。
   BridgeDB将所有具有运行标志的桥存储为一组运行桥，可以分发给桥接用户。
   如果BridgeDB希望确保给定的桥集至少包含给定数量的带这些标志的桥集，那么它将记住分配的标志。

1.2。解析桥描述符

   BridgeDB通过解析网桥描述符了解网桥最新的IP地址和或端口。
   理论上，网桥的IP地址和或端口也包含在网桥网络状态的“r”线中，因此不存在解析网桥描述符的强制理由。但是，如果我们将来需要桥接描述符中的数据，仍然可以实现本节中描述的功能。

   桥接描述符文件可以包含一个或多个桥接描述符。
   我们期望桥接描述符至少按照规定的顺序包含以下几行:
 “@purpose”SP purpose NL“router”SP昵称SP IP ORPort SP SOCKSPort SP DirPort NL“发布”SP时间戳[“opt”SP]“fingerprint”SP fingerprint“router- Signature”NL签名

   BridgeDB从这些行解析目的、IP、ORPort、昵称和指纹。
   如果指纹不包含在之前解析的网桥网络状态中，或者网桥没有运行标志，BridgeDB将跳过网桥描述符。
   BridgeDB丢弃与“桥”有不同用途的桥描述符。可以将BridgeDB配置为只接受具有其他用途的描述符，或者根本不根据用途丢弃描述符。
   BridgeDB记住剩余网桥的IP地址和或端口。
   如果有多个桥接描述符具有相同的指纹，
   BridgeDB存储最近解析的桥接描述符的IP地址和或端口。
   如果BridgeDB没有找到之前解析的网桥网络状态中包含的网桥描述符，那么它不会将该网桥添加到要分发给网桥用户的网桥集中。

1.3。解析extra-info文档

   通过解析extra-info文档，BridgeDB了解桥接器是否支持可插拔传输。
   Extra-info文档分别包含网桥的名称(但只有在它被命名的情况下)、网桥的指纹、它支持的可插拔传输类型以及每个传输侦听的IP地址和端口号。

   每个桥接器的Extra-info文档可能包含零个或多个条目。我们期望额外信息条目按照规定的顺序包含以下几行:
 "extra-info" SP名称SP指纹NL "transport" SP transport SP IP ":" PORT ARGS NL

   BridgeDB解析指纹、传输类型、IP地址、端口和在这些行上指定的任何参数。BridgeDB跳过了这个名称。如果指纹无效，BridgeDB跳过该条目。BridgeDB存储传输类型、IP地址、端口号和提供的任何参数，然后根据指纹将它们分配给相应的桥接。参数以逗号分隔，形式为k=v,k=v。
   没有关联的extra-info条目的桥不会无效。

2. 将桥接器分配给分销商

   “分发器”是一种向客户端提供(或不提供)桥梁的机制。目前的分销商是“电子邮件”、“https”和“未分配”。

   BridgeDB根据桥的ID和一个秘密的HMAC散列将桥分配给分发器，并使这些分配具有持久性。
   持久性是通过使用数据库将节点ID映射到分发服务器来实现的。
   每个桥接器被精确地分配给一个分发服务器(包括“未分配的”分发服务器)。
   可以将BridgeDB配置为只支持本文档中指定的分发器的非空子集。
   可以将BridgeDB配置为使用不同的概率为分发器分配新的桥接器。
   即使分配网桥给分销商的概率发生了变化或分销商完全禁用了，BridgeDB也不会改变对分销商的现有网桥分配。

3.根据请求提供桥梁

   在接收客户端请求时，BridgeDB分发服务器提供分配给它的桥的子集。
   BridgeDB只提供包含在最近解析网桥网络状态中并设置了运行标志的网桥(请参阅
   第一节)。
   BridgeDB可以配置为根据分发服务器提供不同数量的桥接器(通常为4个)。
   BridgeDB可以定义任意数量的规则。这些规则可以指定选择网桥的标准。具体来说，可用规则会限制IP地址版本或端口号、传输类型、网桥中继标志或不应阻止网桥的国家。

4. 根据IP地址选择网桥

   可以将BridgeDB配置为支持一个或多个分发器，这些分发器根据请求者的IP地址提供桥接器。目前，这就是HTTPS分发服务器的工作方式。
   这样做的目的是避免以类似的方式将所有桥接器分发给用户
   IP空间和时间。#其他人应该看看提案/想法/旧的/xxx桥梁支付#，看看这个部分是否缺少相关的部分。吉隆坡

   BridgeDB修复在定义的时间段内返回的桥集。
   BridgeDB将来自相同/24网络的所有IP地址视为相同的IP地址，并返回相同的桥接集。从这里开始，这个非唯一的地址将被称为IP地址的“区域”。
   BridgeDB将IP地址空间平均划分为少量的#注意，术语从“区域”改为“不相交集群”-MF不相交集群(通常为4)，并对来自放置在不同集群中的地址的请求返回不同的结果。我发现BridgeDB并不严格地只返回给定区域的桥。如果一个环是空的，它会考虑下一个。这是#预期的行为吗?这似乎不再是事实了。如果一个环是空的，那么# BridgeDB只返回一个空的桥接集。我还发现，BridgeDB没有分配到数据库中的# persistent区域。因此，如果我们改变环的数量，它将把桥分配给其他环。我想这样可以吧?吉隆坡
   BridgeDB维护一个代理IP地址列表，并向来自这些IP地址的请求返回相同的桥接集。
   返回到代理IP地址的网桥与一般IP地址空间的网桥不同。

   可以将桥接数据库配置为在答复中包括桥接指纹以及桥接IP地址和或端口。
   可以将BridgeDB配置为显示一个验证码，用户必须在返回请求的桥接之前解决这个验证码。

   目前的算法如下。基于ip的分发服务器根据网桥的HMAC将网桥统一地分割成一组“环”
   有些环是IP空间的“区域”环;有些是IPs类别的“类别”环(如代理)。当客户机从IP发出请求时，分发服务器首先查看该IP是否属于它所知道的类别之一。如果是，分发服务器将从类别环返回一个IP。如果没有，分发器将IP映射到一个“区域”(即a /24)，然后使用HMAC将该区域映射到其中一个区域环。

   当基于ip的分发服务器决定从哪个区域环分发网桥时，它确定将使用哪些规则来选择适当的网桥。使用这个信息，它将搜索它的环缓存中已经符合这个请求中指定的条件的环。如果存在，则BridgeDB映射当前的“epoch”(n小时周期)和
   IP的区域(/24)到基于HMAC的环上的一个点，并在那个点分发桥接器。如果满足这个要求的环还不存在，那么就会创建一个新的环，并填满满足要求的桥。然后用这个环来选择所描述的桥。
 上面“基于HMAC将X映射到Y”的意思是:

      -我们以某种顺序保存Y中的所有元素，将所有160位字符串映射到Y中的位置。
      -我们取一个X的HMAC，使用一些固定的字符串作为键来得到a
        160位的值。然后把这个值映射到Y的下一个位置。

   当根据环中的位置分配桥接器时，BridgeDB首先考虑标志要求和端口要求。例如,
   BridgeDB可以被配置为“提供至少L个带端口的网桥”
   至少有M座桥是稳定的，最多有N座桥。为此，BridgeDB组合得到如下结果:

      -第一个L桥在环后的位置有端口443，和
      -第一个M桥在擂台后的位置是旗杆稳定，而旗杆还没有决定给出
      -第一个N-L-M桥在环后的位置，它还没有决定给。

    在BridgeDB选择适当的桥返回给请求者之后，它然后在列表中对它们排序，以便在前几个桥中满足尽可能多的条件。如果可能的话，这个列表会被截断为N个桥。N目前定义为环中桥的数量的分段函数，这样:
 1，如果len(ring) < 20
        2，如果20 <= len(ring) <= 100 | | 3，如果100 <= len(ring) \

    这个子列表中的桥(不超过N个桥)是返回给请求者的桥。

5. 根据电子邮件地址选择网桥

   可以将BridgeDB配置为支持一个或多个分发器，这些分发器根据请求者的电子邮件地址分发桥接器。目前，这是电子邮件分销商的工作方式。
   目标是引导基于一个或多个流行的电子邮件服务的sybil预防算法。#其他人应该看看提案/想法/旧的/xxx桥梁支付#，看看这个部分是否缺少相关的部分。吉隆坡

   BridgeDB拒绝包含RFC2822允许的字符以外的其他字符的电子邮件地址。
   BridgeDB可能被配置为拒绝包含它不能正确处理的其他字符的电子邮件地址。我不认为我们这样做，值得吗?曼氏金融
   BridgeDB拒绝来自其他域而不是一组已配置的允许域的电子邮件地址。
   BridgeDB通过删除"."字符和删除第一个"+"字符后的部分来规范化电子邮件地址。
   可以配置BridgeDB丢弃X-DKIM-Authentication-Result头中没有“pass”值的请求，或者丢弃没有此头的请求。x -DKIM- authentic- result标头是由需要检查DKIM身份验证的传入邮件堆栈设置的。

   在给定的时间段(通常是几个小时)过去之前，BridgeDB不会将一组新的桥返回到相同的电子邮件地址。我们为什么不像对IP地址那样，修复我们在全球3小时内提供的桥梁呢?这样我们就可以避免存储电子邮件地址。3小时的值可能太短了。如果我们花了更长的时间，那么当桥梁出现时，人们就会得到新的桥梁，而不是我们决定重新设置我们给他们的桥梁。(是的，IP分发器存在这个#问题)。恐怕我没有完全理解你的意思。你能详细解释一下吗?假设平均的流失率，如果我们使用较短的时间周期，那么请求者将收到基于速率限制的新网桥，并且(很可能)#最终会在环内工作;最终耗尽此分发服务器上所有可用的桥。如果我们使用更长的时间周期，那么每次周期到期时，环中将有更多的桥，从而减少了所有桥被阻塞的可能性，增加了枚举所有桥所需的时间和精力。(这是我的理解，不是Nick的理解)——同样，我们现在需要缓存来防止重播，因为如果一个用户发送了多个不同条件的请求，否则我们会泄漏额外的桥接器。曼氏金融
   可以将桥接数据库配置为在答复中包括桥接指纹以及桥接IP地址和或端口。
   可以配置BridgeDB使用PGP签名密钥对所有应答进行签名。
   BridgeDB定期丢弃旧的电子邮件地址到网桥的映射。
   BridgeDB拒绝来自同一规范化地址的太频繁的电子邮件请求。

   为了将以前未见过的电子邮件地址映射到一组桥接器，BridgeDB执行如下操作:

     -它正常化的电子邮件地址如上，剥离点，删除所有localpart后的+，并把它全部在小写。(例子:“John.Doe + bridges@example。COM”成为“johndoe@example.com”。)
     -它映射一个归一化地址的HMAC到它的桥环上的位置。
     -根据端口/旗帜的要求，在第4节末尾指定的位置开始分发桥接器。

    有关如何从环中选择桥并返回给请求者的详细信息，请参阅第4节。

6. 选择未分配的桥存储在文件桶中
 Kaner应该看看这个部分。纳米

   可以将BridgeDB配置为保留桥的子集，而不是通过某个分发器分发它们。
   BridgeDB将保留桥接分配给一个或多个固定大小的文件桶，并将这些文件桶写入磁盘，以便手动分发。
   BridgeDB确保文件桶始终包含所请求的正在运行的桥的数量。
   如果文件桶中请求的桥的数量减少了，或者不再需要文件桶，那么未分配的桥将返回到保留的桥集。
   如果一个网桥停止运行，BridgeDB将用保留网桥集中的另一个网桥替换它。我不确定文件桶中是否有设计错误。如果我们将桥接器X添加到文件桶a，并且X脱机，会发生什么?我们可以在文件bucket A中添加# another bridge Y，但是如果A返回呢?我们不能把它放回文件桶A，因为它已经满了。我们是否要#添加它到一个不同的文件桶?这难道不意味着随着时间的推移，大多数桥#将包含在大多数文件桶中吗?- kl# #这应该处理的相同，如果文件桶的大小减少。#如果X返回，则应该将其添加到适当的分发服务器。曼氏金融

7. 显示桥信息

  中所述的方法之一选定桥梁后
  第4 - 6节，它们以两种格式之一输出。桥梁的格式如下:
 <地址:端口>问

  可插入传输的格式如下:
 <transportname> SP <地址:端口> [SP arglist] NL
 其中arglist是一个可选的以空格分隔的键值对列表，形式为k=v。

  以前，每行前面都加上“bridge”关键字，例如
 "桥" SP <地址:端口> NL
 “桥”SP <transportname> SP <地址:端口> [SP arglist] NL
 我们不再这样做了，因为Vidalia和TorLauncher不希望这样。#查看b70347a9c5fd769c6d5d0c0eb5171ace2999a736的提交消息。

8. 为统计编写桥接分配

   可以配置BridgeDB将网桥分配写到磁盘，以便进行统计分析。
   桥接分配的开始由以下行标记:
 “桥-池-任务”SP YYYY-MM-DD HH:MM:SS NL

   YYYY-MM-DD HH:MM:SS是在UTC中，BridgeDB完成加载新网桥并将其分配给分发者的时间。

   每一座运行桥都有一条以下格式的线:
 指纹SP分发器(SP密钥"="值)* NL

   分销商是一个“电子邮件”，“https”，或“未分配”。

   “email”和“https”分销商都支持添加“端口”、“flag”和“transport”键。端口号、标志名称和传输类型分别是值。它们用于指示网桥匹配请求的某些端口、标志和传输标准。

   “https”分发服务器还允许密钥“环”以一个数字作为值来指示网桥返回到哪个IP地址区域。

   “unallocation”分发服务器允许密钥“bucket”以文件bucket名作为值来指示网桥被分配到哪个文件bucket。

